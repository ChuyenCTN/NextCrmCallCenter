plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'kotlin-android-extensions'

apply plugin: "kotlin-kapt"

apply plugin: 'com.google.gms.google-services'

def gitBranch = new ByteArrayOutputStream()

static def getPackageName() {
    return "com.hosco.nextcrm.callcenter"
}

task getGitVersion() {
    def gitVersion = "4.6.0"
    def gitVersionStream = new ByteArrayOutputStream()
    def gitCommitsCount = new ByteArrayOutputStream()
    def gitCommitHash = new ByteArrayOutputStream()

    try {
        exec {
            executable "git" args "describe", "--abbrev=0"
            standardOutput = gitVersionStream
        }
        exec {
            executable "git" args "rev-list", gitVersionStream.toString().trim() + "..HEAD", "--count"
            standardOutput = gitCommitsCount
        }
        exec {
            executable "git" args "rev-parse", "--short", "HEAD"
            standardOutput = gitCommitHash
        }
        exec {
            executable "git" args "name-rev", "--name-only", "HEAD"
            standardOutput = gitBranch
        }

        if (gitCommitsCount.toString().toInteger() == 0) {
            gitVersion = gitVersionStream.toString().trim()
        } else {
            gitVersion = gitVersionStream.toString().trim() + "." + gitCommitsCount.toString().trim() + "+" + gitCommitHash.toString().trim()
        }
        println("Git version: " + gitVersion)
    } catch (ignored) {
        println("Git not found")
    }
    project.version = gitVersion
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.hosco.nextcrm.callcenter"
        minSdk 24
        targetSdk 31
        versionCode 5
        versionName "5.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    dexOptions {
        jumboMode = true
        javaMaxHeapSize "4g"
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
        experimental = true
    }

    applicationVariants.all { variant ->
        buildConfigField("String", "BASE_URL", "\"https://api-nextcrm.nextcrm.vn/\"")
        variant.getMergedFlavor().manifestPlaceholders = [linphone_address_mime_type: "vnd.android.cursor.item/vnd." + getPackageName() + ".provider.sip_address",
                                                          linphone_file_provider: getPackageName() + ".debug.fileprovider",
                                                          appLabel: "@string/app_name_debug",
                                                          extractNativeLibs: "true"]
    }

    signingConfigs {
        release {
            storeFile file("callcenter.jks")
            storePassword 'hosco1234'
            keyAlias 'callcenter'
            keyPassword 'hosco1234'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release

            resValue "string", "linphone_app_branch", gitBranch.toString().trim()
            resValue "string", "sync_account_type", getPackageName() + ".sync"
            resValue "string", "file_provider", getPackageName() + ".fileprovider"
            resValue "string", "linphone_address_mime_type", "vnd.android.cursor.item/vnd." + getPackageName() + ".provider.sip_address"
        }

        debug {
            signingConfig signingConfigs.release
            debuggable true
            jniDebuggable true

            resValue "string", "linphone_app_branch", gitBranch.toString().trim()
            resValue "string", "sync_account_type", getPackageName() + ".sync"
            resValue "string", "file_provider", getPackageName() + ".debug.fileprovider"
            resValue "string", "linphone_address_mime_type", "vnd.android.cursor.item/vnd." + getPackageName() + ".provider.sip_address"
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
//    implementation project(path: ':commons')
    implementation 'androidx.emoji:emoji:1.1.0'
    implementation 'com.google.firebase:firebase-database:20.0.2'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation("com.android.support:multidex:1.0.3")

    //Rx Android
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rx_android"
    implementation "io.reactivex.rxjava2:rxjava:$rootProject.rx_java"

    //retrofit load api
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofit"
    implementation "com.google.code.gson:gson:$rootProject.gson"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.rx_java_adapter"
    implementation("com.squareup.okhttp3:logging-interceptor:$rootProject.ok_http") {
        transitive = true
    }
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    //image glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glide_version"

    implementation 'android.arch.lifecycle:extensions:1.1.1'

    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation 'com.github.smarteist:autoimageslider:1.4.0-appcompat'
    implementation 'com.facebook.fresco:fresco:1.5.0'

    implementation 'androidx.databinding:databinding-compiler:4.0.0'

    implementation 'com.github.dmytrodanylyk.shadow-layout:library:1.0.3'
    implementation('com.github.thekhaeng:pushdown-anim-click:1.1.1') {
        exclude group: 'com.android.support'
    }

    kapt "com.android.databinding:compiler:7.0.2"

    implementation 'com.afollestad.material-dialogs:core:3.3.0'

    implementation 'com.karumi:dexter:6.2.3'

    implementation 'com.google.firebase:firebase-crashlytics-ktx:18.2.3'
    implementation 'com.google.firebase:firebase-analytics-ktx:19.0.2'

    implementation 'pub.devrel:easypermissions:3.0.0'

    implementation 'org.linphone:linphone-sdk-android:5.1+'

    implementation 'androidx.media:media:1.4.1'

//    linphone

    implementation 'androidx.fragment:fragment-ktx:1.4.0-alpha08'
//
    implementation "androidx.slidingpanelayout:slidingpanelayout:1.2.0-beta01"
    implementation "androidx.window:window:1.0.0-beta02"
//
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation "androidx.security:security-crypto-ktx:1.1.0-alpha03"
//
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
//
    implementation 'androidx.emoji:emoji-bundled:1.1.0'
//
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation 'com.jaredrummler:material-spinner:1.3.1'

    implementation 'org.greenrobot:eventbus:3.2.0'

    implementation 'com.google.firebase:firebase-database:19.2.0'


}